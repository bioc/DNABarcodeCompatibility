% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_barcode_combinations.R
\name{get_combinations}
\alias{get_combinations}
\alias{get_all_combinations}
\alias{get_random_combinations}
\title{Get compatible combinations of DNA barcodes}
\usage{
get_combinations(index, multiplexing_level)

get_all_combinations(index_df, multiplexing_level, chemistry)

get_random_combinations(index_df, multiplexing_level, chemistry)
}
\arguments{
\item{index}{is a dataframe containing the barcode names, the DNA sequence and the corresponding binary sequence.}

\item{multiplexing_level}{is the number of samples to be multiplexed for sequencing.}
}
\value{
Returns compatible DNA-barcode combinations as a matrix.
}
\description{
Performs either an exhaustive or a random search of compatible DNA-barcode combinations depending on the size of the DNA-barcode population and of the number of samples to be multiplexed.
}
\details{
The \code{\link{get_random_combinations}} function generates k-combinations of a set S composed of n elements by random sampling, and it filters out incompatible combinations on the fly. It stops when 700 k-combinations have been tested for compatibility.  HERE MOTIVATE nrow = 700.
}
\section{Functions}{
\itemize{
\item \code{get_all_combinations}: force to get all compatible combinations of DNA barcodes

\item \code{get_random_combinations}: force to perform random search to get some compatible combinations of DNA barcodes.
}}

\examples{
write.table(DNABarcodeCompatibility::illumina, file <- tempfile(), row.names = FALSE, col.names = FALSE, quote=FALSE)
barcodes <- file_loading_and_checking(file) 
index <- transform(barcodes, binary = sequence_binary_conversion(sequence))
comb <- get_combinations(index,multiplexing_level=3)
head(comb); tail(comb)

allComb <- get_all_combinations(index,multiplexing_level=3)
head(allComb); tail(allComb)

ranComb <- get_random_combinations(index,multiplexing_level=3)
head(ranComb); tail(ranComb)

}
